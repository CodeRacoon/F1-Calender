{"version":3,"sources":["styling/assets/tracks/ausgp.png","styling/assets/ep_naturalblack.png","styling/darkTheme.js","styling/defaults.js","components/header/styling.js","components/header/Header.jsx","components/footer/styling.js","components/footer/Footer.jsx","components/zoneselector/styling.js","components/subheader/styling.js","components/subheader/SubHeader.jsx","data/date.js","components/zoneselector/ZoneSelector.jsx","components/gpdisplay/styling.js","components/gpcard/styling.js","components/gpcard/GpCard.jsx","data/gp.js","components/gpdisplay/GpDisplay.jsx","views/home/homeJss.js","views/home/Home.jsx","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","darkTheme","createMuiTheme","name","palette","common","black","white","background","paper","default","primary","light","main","dark","contrastText","secondary","error","text","disabled","hint","divider","grey","overrides","MuiTab","MuiTabs","root","logoFont","fontFamily","letterSpacing","textTransform","gpFont","fontStyle","styling","theme","Header","textAlign","Header__headLine","fontSize","padding","Header___default","color","textShadow","props","c","this","classes","className","clsx","headline","Divider","variant","orientation","Component","withStyles","Footer","width","height","Footer__contents","position","bottom","marginTop","display","flexDirection","justifyContent","Footer__link","alignItems","Footer___rgbShadow","boxShadow","target","rel","href","IconButton","aria-label","zoneJss","ZoneSelector","ZoneSelector__inputList","minWidth","marginBottom","ZoneSelector___white","ZoneSelector___black","ZoneSelector__infoBox","ZoneSelector__timeText","ZoneSelector___selectEffect","animationName","animationDuration","animationTimingFunction","animationIterationCount","animationFillMode","SubHeader","SubHeader__headLine","SubHeader___default","SubHeader___clickAnimation","onClick","convertTime","data","zone","races","tmp","Object","n","length","sessions","p1","moment","reformatZulu","tz","p2","p3","qualy","race","zulu","x","split","formatToDisplay","time","format","changeZone","setState","value","selector","state","onChange","bind","selectorChange","t","utcOffset","Number","isInteger","Math","trunc","timeOffset","GpDisplay","GpDisplay__list","GpCard","GpCard___fadeIn","GpCard__card","borderRadius","GpCard___even","GpCard___odd","GpCard___textAnimation","GpCard__cardContent","flex","whiteSpace","GpCard__headerName","marginLeft","paddingTop","GpCard__headerDate","marginRight","GpCard__header","margin","GpCard__sessionText","fontWeight","GpCard___headerDefault","opacity","listText","Fragment","onEnter","onExit","cardClick","d","Card","round","onExpand","onMouseEnter","onMouseLeave","CardContent","nameShort","now","valueOf","next","times","i","days","diff","hours","countdown","gpCardHeader","Collapse","timeout","in","extended","unmountOnExit","season","url","raceName","trackImg","ausgp","Circuit","circuitId","circuitName","Location","lat","long","locality","country","desc","tickets","winners","prevProps","map","index","key","homeJss","minHeight","backgroundImage","bg","topDiv","top","right","left","clipPath","transformOrigin","topDiv2","Home","updateTimezone","timezone","localStorage","getItem","guess","e","setItem","App","CssBaseline","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.84ac96ed.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ausgp.0551779e.png\";","module.exports = __webpack_public_path__ + \"static/media/ep_naturalblack.23e2b6cf.png\";","import { createMuiTheme } from '@material-ui/core/styles';\r\n\r\n//Theme generated with\r\n// https://material.io/inline-tools/color/\r\n// https://themebuilder.telerik.com/kendo-react-ui\r\n// https://in-your-saas.github.io/material-ui-theme-editor/\r\nconst darkTheme = createMuiTheme({\r\n    name: \"dark\",\r\n    palette:{\r\n        common: {\r\n            black:\"rgba(0, 0, 0, 1)\",\r\n            white:\"rgba(255, 255, 255, 1)\"\r\n        },\r\n        background:{\r\n            paper:\"rgba(43, 43, 43, 1)\",\r\n            default:\"rgba(17, 17, 17, 1)\"},\r\n        primary:{\r\n            light:\"rgba(54, 164, 251, 1)\",\r\n            main:\"rgba(2, 117, 216, 1)\",\r\n            dark:\"rgba(0, 68, 167, 1)\",\r\n            contrastText:\"#fff\"},\r\n        secondary:{\r\n            light:\"rgba(119, 119, 119, 1)\",\r\n            main:\"rgba(68, 68, 68, 1)\",\r\n            dark:\"rgba(35, 35, 35, 1)\",\r\n            contrastText:\"#fff\"},\r\n        error:{\r\n            light:\"rgba(225, 152, 151, 1)\",\r\n            main:\"rgba(217, 84, 79, 1)\",\r\n            dark:\"rgba(187, 52, 48, 1)\",\r\n            contrastText:\"#fff\"\r\n        },\r\n        text:{\r\n            primary:\"#f2f3f4\",\r\n            secondary:\"rgba(238, 214, 214, 1)\",\r\n            disabled:\"rgba(246, 228, 228, 0.38)\",\r\n            hint:\"rgba(226, 213, 213, 0.38)\"\r\n        },\r\n        divider: \"rgba(255, 255, 255, 0.30)\",\r\n        grey: \"rgba(78, 96, 112, 1)\",\r\n    }\r\n})\r\n\r\ndarkTheme.overrides = {\r\n    \r\n    ...darkTheme.overrides,\r\n    MuiTab: {\r\n    },\r\n    MuiTabs: {\r\n        root: {\r\n            //borderBottom: (\"1px solid \"+ darkTheme.palette.secondary.main)\r\n        }\r\n    }\r\n\r\n    // general overrides for your material tab component here\r\n    \r\n      \r\n}\r\nexport default darkTheme;\r\n","\r\n\r\nexport const logoFont = {\r\n    \r\n    // Roboto is standard font used with Material UI\r\n    fontFamily: '\"Source Sans Pro\", sans serif',\r\n    //fontWeight: \"900\",\r\n    //fontSize: \"64px\",\r\n    //fontStyle: \"normal\",\r\n    letterSpacing: \"normal\",\r\n    textTransform: \"uppercase\",\r\n\r\n      \r\n}\r\n\r\nexport const gpFont = {\r\n    \r\n    // Roboto is standard font used with Material UI\r\n    fontFamily: '\"Montserrat\", sans-serif',\r\n    //fontWeight: \"2000\",\r\n    // fontSize: \"20px\",\r\n    fontStyle: \"normal\",\r\n    letterSpacing: \"normal\",\r\n    textTransform: \"uppercase\"\r\n      \r\n}\r\n\r\n\r\n ","import { logoFont } from \"../../styling/defaults\";\r\n\r\nconst styling = theme => ({\r\n    Header: {\r\n        textAlign: \"center\"\r\n    },\r\n    Header__headLine: {\r\n        ...logoFont,\r\n        fontSize: \"3rem\",\r\n        padding: \"2rem\"\r\n    },\r\n    Header___default: {\r\n        color: theme.palette.text,\r\n        textShadow:\r\n            \"-0.03rem 0.03rem 0px rgba(0,0,0,1), 0.03rem -0.03rem 0px rgba(0,0,0,1),0.12rem 0.12rem 0px rgba(0,255,200,1), -0.08rem -0.02rem 0px rgba(255,0,100,1)\"\r\n    }\r\n});\r\n\r\nexport default styling;\r\n","import React, { Component } from \"react\";\r\n\r\nimport styling from \"./styling\";\r\n\r\nimport { withStyles, Divider } from \"@material-ui/core/\";\r\nimport clsx from \"clsx\";\r\n\r\n/**\r\n * @input headline={string}\r\n */\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super();\r\n    }\r\n\r\n    render() {\r\n        const c = this.props.classes;\r\n\r\n        return (\r\n            <header className={c.Header}>\r\n                <h1 className={clsx(c.Header__headLine, c.Header___default)}>\r\n                    {this.props.headline ? this.props.headline : \"\"}\r\n                    <Divider variant={\"fullWidth\"} orientation={\"horizontal\"} />\r\n                </h1>\r\n            </header>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styling)(Header);\r\n","const styling = theme => ({\r\n    \r\n    Footer: {\r\n        width: \"100vw\",\r\n        height: \"150px\",\r\n        \r\n        \r\n    },\r\n    Footer__contents: {\r\n        position: \"relative\",\r\n        bottom: \"0px\",\r\n        \r\n        marginTop: \"50px\",\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        justifyContent: \"center\",\r\n    },\r\n    Footer__link: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\"\r\n    },\r\n    Footer___rgbShadow: {\r\n        color: \"#fff\",\r\n        boxShadow: \"0.10rem 0.02rem 0px rgba(0,255,200,1), -0.10rem -0.02rem 0px rgba(255,0,100,1)\",\r\n    },\r\n\r\n    \r\n})\r\n\r\nexport default styling;","import React, { Component } from \"react\";\r\nimport clsx from \"clsx\";\r\n\r\nimport styling from \"./styling\";\r\n\r\nimport {\r\n    withStyles, IconButton \r\n} from \"@material-ui/core/\";\r\n\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\n\r\n\r\n\r\nclass Footer extends Component {\r\n\r\n    constructor(props){\r\n        super();\r\n    }\r\n    \r\n    render() {\r\n        const c = this.props.classes;\r\n\r\n        return(\r\n             <footer className={c.Footer}>\r\n                 <footer className={clsx(c.Footer__link, c.Footer__contents)}>\r\n                 \r\n                    <a\r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\"\r\n                        href={\"https://github.com/CodeRacoon\"}\r\n                    >\r\n                        <IconButton className={c.Footer___rgbShadow} aria-label=\"link\">\r\n                            <GitHubIcon />\r\n                        </IconButton>\r\n                    </a>\r\n                    <h6>{\"Formula One, Formula 1, F1 & Grand Prix are trademarks of Formula One Licensing BV.\"}</h6>\r\n                 </footer>\r\n            </footer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styling)(Footer);","import { gpFont } from \"../../styling/defaults\";\r\n\r\nconst zoneJss = theme => ({\r\n    ZoneSelector: {\r\n        alignItems: \"center\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\"\r\n    },\r\n    ZoneSelector__inputList: {\r\n        minWidth: \"20rem\",\r\n        height: \"2rem\",\r\n        marginBottom: \"2rem\"\r\n    },\r\n    ZoneSelector___white: {\r\n        color: \"#fff\"\r\n    },\r\n    ZoneSelector___black: {\r\n        color: \"#000\"\r\n    },\r\n\r\n    ZoneSelector__infoBox: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\"\r\n    },\r\n    ZoneSelector__timeText: {\r\n        ...gpFont,\r\n        fontSize: \"1.2em\"\r\n    },\r\n    ZoneSelector___selectEffect: {\r\n        animationName: \"$zoneTextEntry\",\r\n        animationDuration: \"0.8s\",\r\n        animationTimingFunction: \"linear\",\r\n        animationIterationCount: 1,\r\n        animationFillMode: \"forwards\"\r\n    },\r\n    \"@keyframes zoneTextEntry\": {\r\n        \"0%\": { boxShadow: \"-0.1rem 0.1rem 0px rgba(255,0,100,0.6)\" },\r\n        \"33%\": { boxShadow: \"-0.1rem 0.1rem 0px rgba(255,0,100,0.6)\" },\r\n        \"66%\": { boxShadow: \"0.1rem -0.1rem 0px rgba(0,255,200,1)\" },\r\n        \"100%\": { boxShadow: \"0.1rem -0.1rem 0px rgba(255,0,100,0.0)\" }\r\n    }\r\n});\r\n\r\nexport default zoneJss;\r\n","import { gpFont } from \"../../styling/defaults\";\r\n\r\nconst styling = theme => ({\r\n    SubHeader: {\r\n        textAlign: \"center\"\r\n    },\r\n    SubHeader__headLine: {\r\n        ...gpFont,\r\n        fontSize: \"1.5rem\",\r\n        marginBottom: \"1rem\"\r\n    },\r\n    SubHeader___default: {\r\n        color: theme.palette.text,\r\n        textShadow:\r\n            \"-0.03rem 0.03rem 0px rgba(0,0,0,1), 0.03rem -0.03rem 0px rgba(0,0,0,1), -0.09rem 0.09rem 0px rgba(255,0,100,1), -0.18rem 0.18rem 0px rgba(0,255,200,1), -0.27rem 0.27rem 0px rgba(0,255,200,1)\"\r\n    },\r\n    SubHeader___clickAnimation: {\r\n        textShadow:\r\n            \"-0.03rem 0.03rem 0px rgba(0,0,0,1), 0.03rem -0.03rem 0px rgba(0,0,0,1), -0.09rem 0.09rem 0px rgba(255,0,100,1), -0.18rem 0.18rem 0px rgba(0,255,200,1), -0.27rem 0.27rem 0px rgba(0,255,200,1)\",\r\n        animationName: \"$retractShadow2\",\r\n        animationDuration: \"0.5s\",\r\n        animationTimingFunction: \"linear\",\r\n        animationIterationCount: 1,\r\n        animationFillMode: \"forwards\",\r\n\r\n        \"&:hover\": {\r\n            animationName: \"$clickEffect\",\r\n            animationDuration: \"0.5s\",\r\n            animationTimingFunction: \"ease\",\r\n            animationIterationCount: 2,\r\n            animationFillMode: \"forwards\"\r\n        }\r\n    },\r\n    \"@keyframes retractShadow2\": {\r\n        \"0%\": {\r\n            textShadow:\r\n                \"-0.03rem 0.03rem 0px rgba(0,0,0,1), 0.03rem -0.03rem 0px rgba(0,0,0,1),-0.09rem 0.09rem 0px rgba(255,0,100,1)\"\r\n        },\r\n        \"50%\": {\r\n            textShadow:\r\n                \"-0.03rem 0.03rem 0px rgba(0,0,0,1), 0.03rem -0.03rem 0px rgba(0,0,0,1),-0.09rem 0.09rem 0px rgba(255,0,100,1), -0.18rem 0.18rem 0px rgba(0,255,200,1),\"\r\n        },\r\n        \"100%\": {\r\n            textShadow:\r\n                \"-0.03rem 0.03rem 0px rgba(0,0,0,1), 0.03rem -0.03rem 0px rgba(0,0,0,1),-0.09rem 0.09rem 0px rgba(255,0,100,1), -0.18rem 0.18rem 0px rgba(0,255,200,1), -0.27rem 0.27rem 0px rgba(0,255,200,1)\"\r\n        }\r\n    },\r\n\r\n    \"@keyframes clickEffect\": {\r\n        \"0%\": {\r\n            textShadow:\r\n                \"-0.03rem 0.03rem 0px rgba(0,0,0,1), 0.03rem -0.03rem 0px rgba(0,0,0,1),-0.09rem 0.09rem 0px rgba(255,0,100,1), -0.18rem 0.18rem 0px rgba(0,255,200,1), -0.27rem 0.27rem 0px rgba(0,255,200,1)\"\r\n        },\r\n        \"25%\": {\r\n            color: \"rgba(0,0,0,0)\",\r\n            textShadow:\r\n                \"-0.03rem 0.03rem 0px rgba(255,255,255,1), 0.03rem -0.03rem 0px rgba(255,255,255,1),-0.09rem 0.09rem 0px rgba(255,0,100,1), -0.18rem 0.18rem 0px rgba(0,255,200,1), -0.27rem 0.27rem 0px rgba(0,255,200,1)\"\r\n        },\r\n        \"50%\": {\r\n            color: \"rgba(0,0,0,0)\",\r\n            textShadow:\r\n                \"-0.03rem 0.03rem 0px rgba(0,0,0,0), 0.03rem -0.03rem 0px rgba(0,0,0,0),-0.09rem 0.09rem 0px rgba(255,255,255,1), -0.18rem 0.18rem 0px rgba(0,255,200,1), -0.27rem 0.27rem 0px rgba(0,255,200,1)\"\r\n        },\r\n        \"75%\": {\r\n            color: \"rgba(0,0,0,0)\",\r\n            textShadow:\r\n                \"-0.03rem 0.03rem 0px rgba(0,0,0,0), 0.03rem -0.03rem 0px rgba(0,0,0,0),-0.09rem 0.09rem 0px rgba(255,0,100,0), -0.18rem 0.18rem 0px rgba(255,255,255,1), -0.27rem 0.27rem 0px rgba(0,255,200,1)\"\r\n        },\r\n        \"100%\": {\r\n            color: \"rgba(0,0,0,0)\",\r\n            textShadow:\r\n                \"-0.03rem 0.03rem 0px rgba(0,0,0,0), 0.03rem -0.03rem 0px rgba(0,0,0,0),-0.09rem 0.09rem 0px rgba(255,0,100,0), -0.18rem 0.18rem 0px rgba(0,255,200,0), -0.27rem 0.27rem 0px rgba(255,255,255,1)\"\r\n        }\r\n    }\r\n});\r\n\r\nexport default styling;\r\n","import React, { Component } from \"react\";\r\n\r\nimport styling from \"./styling\";\r\n\r\nimport { withStyles } from \"@material-ui/core/\";\r\nimport clsx from \"clsx\";\r\n\r\n/**\r\n * @input headline={string}\r\n * @input onClick={func}, adds click animation when onClick is given\r\n */\r\nclass SubHeader extends Component {\r\n    constructor(props) {\r\n        super();\r\n    }\r\n\r\n    render() {\r\n        const c = this.props.classes;\r\n\r\n        return (\r\n            <header onClick={this.props.onClick} className={c.SubHeader}>\r\n                <h3\r\n                    className={clsx({\r\n                        [c.SubHeader__headLine]: true,\r\n                        [c.SubHeader___default]: !this.props.onClick,\r\n                        [c.SubHeader___clickAnimation]: this.props.onClick\r\n                    })}\r\n                >\r\n                    {this.props.headline ? this.props.headline : \"\"}\r\n                </h3>\r\n            </header>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styling)(SubHeader);\r\n","\r\nimport moment from \"moment-timezone\";\r\n\r\n\r\n\r\n /**\r\n * @param time races.sessions\r\n * @return \"MM DD-DD\"\r\n */\r\nexport const gpCardHeader = (time) => {\r\n\r\n    if(!time.p1 || !time.race){\r\n        return \"NaN\";\r\n    }\r\n\r\n    let p1 = moment(time.p1).format(\"DD\");\r\n    let race = moment(time.race).format(\"DD\")\r\n    let mm = moment(time.p1).format(\"MMM\");\r\n    return mm + \" \" + p1 + \"-\" + race;\r\n\r\n}\r\n\r\n/* *\r\n* TODO: repurpose for next live session\r\n\r\nexport const nextRace = (races) => {\r\n\r\n    let d;\r\n    const today = new Date();\r\n    let ret;\r\n    \r\n    for(let i = 0; i< races.length; i++){\r\n        d = new Date(races[i].sessions.race.split(\"/\")[0]);\r\n        if(today < d){\r\n            ret = races[i];\r\n            break;\r\n        }\r\n    }\r\n    return ret\r\n}\r\n*/\r\n\r\n/**\r\n * \r\n * @param zone Timezone\r\n * @return \"GMT +/- X | Timezone\"\r\n */\r\nexport const timeOffset = (zone) => {\r\n    let t = moment().tz(zone).utcOffset()/60;\r\n    if(t > 0){\r\n        if(Number.isInteger(t)){\r\n            return \" GMT +\"+ t + \" | \" + zone;\r\n        }\r\n        return \" GMT +\"+ Math.trunc(t) + \":30 | \" + zone;\r\n       \r\n    }\r\n    else if(t === 0){\r\n        return \"GMT | \" + zone;\r\n    }\r\n    else{\r\n        if(Number.isInteger(t)){\r\n            return \" GMT \"+ t + \" | \" + zone;\r\n        }\r\n        return \" GMT \"+ Math.trunc(t) + \":30 | \" + zone ;\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * Modifies given clock depending on timezone\r\n * Note: time string will be converted to Moment obj\r\n * @param data Races obj\r\n * @param zone Timezone\r\n */\r\nexport const convertTime = (data, zone) => {\r\n    \r\n    let races = data;\r\n    let tmp = {};\r\n    \r\n    if(!(races instanceof Object)){\r\n        return data;\r\n    }\r\n    \r\n    let n = data.length;\r\n\r\n    for(let c = 0; c < n; c++){\r\n        tmp = races[c];\r\n        //console.log(moment(reformatZulu(tmp.sessions.p1)).tz(zone));\r\n        tmp.sessions.p1 = moment(reformatZulu(tmp.sessions.p1)).tz(zone);\r\n        tmp.sessions.p2 = moment(reformatZulu(tmp.sessions.p2)).tz(zone);\r\n        tmp.sessions.p3 = moment(reformatZulu(tmp.sessions.p3)).tz(zone);\r\n        tmp.sessions.qualy = moment(reformatZulu(tmp.sessions.qualy)).tz(zone);\r\n        tmp.sessions.race = moment(reformatZulu(tmp.sessions.race)).tz(zone);\r\n        races[c] = tmp;\r\n        \r\n    }\r\n    return races;\r\n}\r\n\r\n/**\r\n * Converts standard timestring to readable for Moment.js\r\n * @param zulu Timestring\r\n */\r\nconst reformatZulu = (zulu) => {\r\n\r\n    if(zulu instanceof Object){\r\n        return zulu;\r\n    }\r\n    let x = zulu.split(\"/\");\r\n    return x[0] + \" \" + x[1];\r\n}\r\n\r\n\r\n// Converts Moment.js obj to readable string\r\nexport const formatToDisplay = (time) => {\r\n    return moment(time).format(\"HH:mm  -  DD/MM\");\r\n}\r\n\r\n\r\n\r\n/**\r\n * Countdown to next session for race weekend\r\n * @param time: races.sessions\r\n */\r\nexport const countdown = (time) => {\r\n\r\n    if(!time.p1 || !time.p2 || !time.p3 || !time.qualy || !time.race){\r\n        return \"Nan\"\r\n    }\r\n    let now = moment().valueOf();\r\n    let next = \"\";\r\n    let times = [time.p1, time.p2, time.p3, time.qualy, time.race];\r\n\r\n    for(let i = 0; i < times.length; i++){\r\n        if(times[i].valueOf() > now){\r\n            next = times[i];\r\n            break;\r\n        }\r\n    }\r\n\r\n    if(next === \"\"){\r\n        return \"Completed\";\r\n    }\r\n\r\n    let days = next.diff(moment(), 'days');\r\n    let hours = next.diff(moment(), 'hours') - (days * 24);\r\n    let minutes = next.diff(moment(), 'minutes') - ((days * 24 + hours) * 60);\r\n\r\n    return \"Session Start \"+ days + \"D:\" + hours + \"H:\" + minutes + \"M\";\r\n}","import React, { Component } from \"react\";\r\n\r\nimport zoneJss from \"./styling\";\r\nimport SubHeader from \"../subheader/SubHeader\";\r\n\r\nimport { withStyles} from \"@material-ui/core/\";\r\n\r\nimport Select from \"react-timezone-select\";\r\n\r\nimport { timeOffset } from \"../../data/date\";\r\nimport clsx from \"clsx\";\r\n\r\nclass ZoneSelector extends Component {\r\n    constructor(props) {\r\n        super();\r\n        this.changeZone = this.changeZone.bind(this);\r\n        this.selectorChange = this.selectorChange.bind(this);\r\n        this.state = {\r\n            zone: props.zone,\r\n            selector: true\r\n        };\r\n    }\r\n\r\n    changeZone = zone => {\r\n        this.setState({\r\n            zone: zone.value,\r\n            selector: !this.state.selector\r\n        });\r\n        this.props.onChange(zone.value);\r\n    };\r\n\r\n    selectorChange() {\r\n        if (this.state.selector) {\r\n            this.setState({\r\n                selector: !this.state.selector\r\n            });\r\n        }\r\n    }\r\n    render() {\r\n        const c = this.props.classes;\r\n        return (\r\n            <section className={c.ZoneSelector}>\r\n                <SubHeader\r\n                    onClick={this.selectorChange}\r\n                    headline={\"Select Timezone\"}\r\n                />\r\n                <time\r\n                    className={clsx(\r\n                        c.ZoneSelector__inputList,\r\n                        c.ZoneSelector___black\r\n                    )}\r\n                    onClick={this.selectorChange}\r\n                >\r\n                    {this.state.selector ? (\r\n                        <section\r\n                            className={clsx(\r\n                                c.ZoneSelector__infoBox,\r\n                                c.ZoneSelector___white\r\n                            )}\r\n                        >\r\n                            <em\r\n                                className={clsx(\r\n                                    c.ZoneSelector__timeText,\r\n                                    c.ZoneSelector___selectEffect\r\n                                )}\r\n                            >\r\n                                {timeOffset(this.state.zone)}\r\n                            </em>\r\n                        </section>\r\n                    ) : (\r\n                        <Select\r\n                            value={this.state.zone}\r\n                            onChange={this.changeZone}\r\n                        />\r\n                    )}\r\n                </time>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(zoneJss)(ZoneSelector);\r\n","const styling = theme => ({\r\n    GpDisplay: {},\r\n    GpDisplay__list: {\r\n        marginBottom: \"40px\",\r\n        alignItems: \"center\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\"\r\n    }\r\n});\r\n\r\nexport default styling;\r\n","import { gpFont } from \"../../styling/defaults\";\r\n\r\nconst styling = theme => ({\r\n    GpCard: {},\r\n    GpCard___fadeIn: {\r\n        animationName: \"$fadein\",\r\n        animationDuration: \"3s\",\r\n        animationTimingFunction: \"linear\",\r\n        animationIterationCount: 1,\r\n        animationFillMode: \"forwards\"\r\n    },\r\n\r\n    GpCard__card: {\r\n        width: \"50vw\",\r\n        borderRadius: \"50px 5px 50px 5px\",\r\n        marginTop: \"0.5rem\"\r\n    },\r\n\r\n    GpCard___even: {\r\n        background: \"rgba(50,0,20,0)\",\r\n        boxShadow: \"-0.09rem 0.09rem 0px rgba(0,255,200,0.3)\"\r\n    },\r\n    GpCard___odd: {\r\n        boxShadow: \"-0.09rem 0.09rem 0px rgba(255,0,100,0.3)\",\r\n        background: \"rgba(0,255,200,0.0)\"\r\n    },\r\n\r\n    GpCard___textAnimation: {\r\n        \"&:hover\": {\r\n            animationName: \"$rotateRose\",\r\n            animationDuration: \"0.5s\",\r\n            animationTimingFunction: \"linear\",\r\n            animationIterationCount: \"1\",\r\n            animationFillMode: \"forwards\",\r\n            \"& $GpCard__headerName\": {\r\n                animationName: \"$addShadow\",\r\n                animationDuration: \"0.5s\",\r\n                animationTimingFunction: \"linear\",\r\n                animationIterationCount: 1,\r\n                animationFillMode: \"forwards\"\r\n            },\r\n            \"& $GpCard__headerDate\": {\r\n                animationName: \"$addShadowDate\",\r\n                animationDuration: \"0.5s\",\r\n                animationTimingFunction: \"linear\",\r\n                animationIterationCount: 1,\r\n                animationFillMode: \"forwards\"\r\n            }\r\n        }\r\n    },\r\n\r\n    GpCard__cardContent: {\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        flex: 1,\r\n        justifyContent: \"center\",\r\n        whiteSpace: \"pre-wrap\"\r\n    },\r\n    GpCard__headerName: {\r\n        ...gpFont,\r\n        marginLeft: \"50px\",\r\n        paddingTop: \"10px\"\r\n    },\r\n    GpCard__headerDate: {\r\n        ...gpFont,\r\n        marginRight: \"50px\",\r\n        paddingTop: \"10px\"\r\n    },\r\n    GpCard__header: {\r\n        margin: \"-1rem\",\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        justifyContent: \"space-between\"\r\n    },\r\n    GpCard__sessionText: {\r\n        ...gpFont,\r\n        fontWeight: \"400\",\r\n        fontSize: \"0.8rem\"\r\n    },\r\n    GpCard___headerDefault: {\r\n        color: theme.palette.text,\r\n        textShadow:\r\n            \"-0.00rem 0.09rem 0px rgba(0,0,0,1), 0.00rem -0.03rem 0px rgba(0,0,0,1),-0.00rem 0.09rem 0px rgba(50,50,50,1), -0.00rem 0.18rem 0px rgba(100,100,100,1)\"\r\n    },\r\n\r\n    \"@keyframes fadein\": {\r\n        \"0%\": { opacity: 0 },\r\n        \"100%\": { opacity: 1 }\r\n    },\r\n    \"@keyframes addShadowDate\": {\r\n        \"0%\": {\r\n            opacity: 0,\r\n            textShadow:\r\n                \"-0.0rem 0.03rem 0px rgba(0,0,0,1), 0.0rem -0.03rem 0px rgba(0,0,0,1),-0.0rem 0.09rem 0px rgba(50,50,50,1), -0.0rem 0.18rem 0px rgba(100,100,100,1)\"\r\n        },\r\n\r\n        \"100%\": {\r\n            opacity: 1,\r\n            textShadow:\r\n                \"-0.0rem 0.01rem 0px rgba(0,0,0,1), 0.0rem -0.04rem 0px rgba(0,0,0,1),-0.0rem 0.10rem 0px rgba(50,50,50,1) ,-0.0rem 0.15rem 0px rgba(255,0,100,1), -0.0rem 0.20rem 0px rgba(0,255,200,1)\"\r\n        }\r\n    },\r\n    \"@keyframes addShadow\": {\r\n        \"0%\": {\r\n            textShadow:\r\n                \"-0.0rem 0.03rem 0px rgba(0,0,0,1), 0.0rem -0.03rem 0px rgba(0,0,0,1),-0.0rem 0.09rem 0px rgba(50,50,50,1), -0.0rem 0.18rem 0px rgba(100,100,100,1)\"\r\n        },\r\n\r\n        \"100%\": {\r\n            textShadow:\r\n                \"-0.0rem 0.01rem 0px rgba(0,0,0,1), 0.0rem -0.04rem 0px rgba(0,0,0,1),-0.0rem 0.10rem 0px rgba(50,50,50,1) ,-0.0rem 0.15rem 0px rgba(255,0,100,1), -0.0rem 0.20rem 0px rgba(0,255,200,1)\"\r\n        }\r\n    },\r\n    \"@keyframes rotateCyan\": {\r\n        \"0%\": { boxShadow: \"-0.09rem 0.09rem 0px rgba(0,255,200,0.3)\" },\r\n        \"100%\": {\r\n            boxShadow:\r\n                \"-0.15rem 0.15rem 0px rgba(0,255,200,0.6),0.15rem -0.15rem 0px rgba(0,255,200,0.6)\"\r\n        }\r\n    },\r\n    \"@keyframes rotateRose\": {\r\n        \"0%\": { boxShadow: \"-0.09rem 0.09rem 0px rgba(255,0,100,0.3)\" },\r\n        \"100%\": {\r\n            boxShadow:\r\n                \"-0.15rem 0.15rem 0px rgba(255,0,100,0.6),0.15rem -0.15rem 0px rgba(255,0,100,0.6)\"\r\n        }\r\n    }\r\n});\r\n\r\nexport default styling;\r\n","import React, { Component } from \"react\";\r\n\r\nimport styling from \"./styling\";\r\nimport { gpCardHeader, formatToDisplay, countdown } from \"../../data/date\";\r\n\r\n\r\nimport {\r\n    withStyles,\r\n    Card,\r\n    Collapse,\r\n    CardContent,\r\n    Divider\r\n} from \"@material-ui/core/\";\r\nimport clsx from \"clsx\";\r\n\r\n\r\n// TODO: Add Circuit map and flag to card\r\nclass GpCard extends Component {\r\n    constructor(props) {\r\n        super();\r\n\r\n        this.onEnter = this.onEnter.bind(this);\r\n        this.onExit = this.onExit.bind(this);\r\n        this.state = {\r\n            disabled: false\r\n        };\r\n    }\r\n\r\n    onExpand(n) {\r\n        \r\n        this.props.cardClick(n);\r\n        \r\n        \r\n    }\r\n\r\n    onEnter() {\r\n        this.setState({ disabled: true });\r\n    }\r\n    onExit() {\r\n        this.setState({ disabled: false });\r\n    }\r\n\r\n    listText = (text, c, divider=true) => {\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <h5 className={c.GpCard__sessionText}>{text}</h5>\r\n                {divider ? \r\n                <Divider variant=\"fullWidth\"/>:\r\n                null}\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const c = this.props.classes;\r\n        const d = this.props.data;\r\n\r\n        return (\r\n            <section className={clsx(c.GpCard, c.GpCard___fadeIn)}>\r\n                <Card\r\n                    className={clsx({\r\n                        [c.GpCard___even]: d.round % 2,\r\n                        [c.GpCard___odd]: d.round % 2 ? false : true,\r\n                        [c.GpCard__card]: true,\r\n                        [c.GpCard___textAnimation] : true\r\n                    })}\r\n                    onClick={() => this.onExpand(d.round)}\r\n                    onMouseEnter={this.onEnter}\r\n                    onMouseLeave={this.onExit}\r\n                >\r\n                    <CardContent className={c.GpCard__header}>\r\n                            <h3 className={clsx(c.GpCard__headerName, c.GpCard___headerDefault)}>\r\n                                {d.nameShort}\r\n                            </h3>\r\n\r\n                        {this.state.disabled ? (\r\n                            <h3 className={clsx(c.GpCard__headerDate, c.GpCard___headerDefault)}>\r\n                                {countdown(d.sessions)}\r\n                            </h3>\r\n                        ) : (\r\n                            <h3 className={clsx(c.GpCard__headerDate, c.GpCard___headerDefault)}>\r\n                                {gpCardHeader(d.sessions)}\r\n                            </h3>\r\n                        )}\r\n                    </CardContent>\r\n                    <Collapse timeout={100} in={d.extended} unmountOnExit>\r\n                        <Divider />\r\n                        <CardContent className={c.GpCard__cardContent}>\r\n                            <CardContent >\r\n                                {this.listText(\"Practice 1:             \" +  formatToDisplay(d.sessions.p1), c)}\r\n                                {this.listText(\"Practice 2:             \" +  formatToDisplay(d.sessions.p2), c)}\r\n                                {this.listText(\"Practice 3:             \" +  formatToDisplay(d.sessions.p3), c)}\r\n                                {this.listText(\"Qualy:                      \" +  formatToDisplay(d.sessions.qualy), c)}\r\n                                {this.listText(\"Race:                         \" +  formatToDisplay(d.sessions.race), c, false)}\r\n                            </CardContent>\r\n                            \r\n                        </CardContent>\r\n                    </Collapse>\r\n                </Card>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styling)(GpCard);\r\n","\r\nimport ausgp from \"../styling/assets/tracks/ausgp.png\";\r\n\r\n// From https://ergast.com/api/f1/2020.json\r\nexport const races = [\r\n    {\r\n        season: \"2020\",\r\n        round: \"1\",\r\n        url: \"https://en.wikipedia.org/wiki/2020_Australian_Grand_Prix\",\r\n        raceName: \"Australian Grand Prix\",\r\n        nameShort: \"Australian GP\",\r\n        trackImg: ausgp,\r\n        Circuit: {\r\n            circuitId: \"albert_park\",\r\n            url: \"http://en.wikipedia.org/wiki/Melbourne_Grand_Prix_Circuit\",\r\n            circuitName: \"Albert Park Grand Prix Circuit\",\r\n            Location: {\r\n                lat: \"-37.8497\",\r\n                long: \"144.968\",\r\n                locality: \"Melbourne\",\r\n                country: \"Australia\"\r\n            }\r\n        },\r\n        sessions: {\r\n            p1: \"2020-03-13/01:00:00Z\",\r\n            p2: \"2020-03-13/05:00:00Z\",\r\n            p3: \"2020-03-14/03:00:00Z\",\r\n            qualy: \"2020-03-14/06:00:00Z\",\r\n            race: \"2020-03-15/05:10:00Z\"\r\n        },\r\n        desc: \"As a temporary facility, Albert Park can be quite bumpy, while the circuit at the start of the weekend is often slippery, rubbering in as the sessions progress. It’s also a circuit that requires a well-sorted chassis, with several spots on the track where the drivers require a reactive front end to allow them to chuck it into a corner – the main one being the rapid Turn 11-12 chicane. Melbourne is also one of the faster tracks on the calendar, with Lewis Hamilton’s 2019 pole lap set at an average of over 235km/h.\",\r\n        tickets: \"https://motorsporttickets.com/en-gb/f1/australia/tickets\",\r\n        winners: [\"2019: Bottas\", \"2018: Vettel\", \"2017: Vettel\"],\r\n        extended: false,\r\n    },\r\n    {\r\n        season: \"2020\",\r\n        round: \"2\",\r\n        url: \"https://en.wikipedia.org/wiki/2020_Bahrain_Grand_Prix\",\r\n        raceName: \"Bahrain Grand Prix\",\r\n        nameShort: \"Bahrain GP\",\r\n        trackImg: \"https://www.formula1.com/content/dam/fom-website/2018-redesign-assets/Circuit%20maps%2016x9/Bahrain_Circuit.png.transform/7col-retina/image.png\",\r\n        Circuit: {\r\n            circuitId: \"bahrain\",\r\n            url: \"http://en.wikipedia.org/wiki/Bahrain_International_Circuit\",\r\n            circuitName: \"Bahrain International Circuit\",\r\n            Location: {\r\n                lat: \"26.0325\",\r\n                long: \"50.5106\",\r\n                locality: \"Sakhir\",\r\n                country: \"Bahrain\"\r\n            }\r\n        },\r\n        sessions: {\r\n            p1: \"2020-03-20/11:00:00Z\",\r\n            p2: \"2020-03-20/15:00:00Z\",\r\n            p3: \"2020-03-21/12:00:00Z\",\r\n            qualy: \"2020-03-21/15:00:00Z\",\r\n            race: \"2020-03-22/15:10:00Z\"\r\n        },\r\n        desc: \"\",\r\n        tickets: \"https://motorsporttickets.com/en-gb/f1/bahrain/tickets\",\r\n        winners: [\"2019: Hamilton\", \"2018: Vettel\", \"2017: Vettel\"],\r\n        extended: false,\r\n    },\r\n    {\r\n        season: \"2020\",\r\n        round: \"3\",\r\n        url: \"https://en.wikipedia.org/wiki/2020_Vietnamese_Grand_Prix\",\r\n        raceName: \"Vietnamese Grand Prix\",\r\n        nameShort: \"Vietnamese GP\",\r\n        Circuit: {\r\n            circuitId: \"hanoi\",\r\n            url: \"http://en.wikipedia.org/wiki/Hanoi_Street_Circuit\",\r\n            circuitName: \"Hanoi Street Circuit\",\r\n            Location: {\r\n                lat: \"21.0166\",\r\n                long: \"105.766\",\r\n                locality: \"Hanoi\",\r\n                country: \"Vietnam\"\r\n            }\r\n        },\r\n        sessions: {\r\n            p1: \"2020-04-03/05:00:00Z\",\r\n            p2: \"2020-04-03/09:00:00Z\",\r\n            p3: \"2020-04-04/06:00:00Z\",\r\n            qualy: \"2020-04-04/09:00:00Z\",\r\n            race: \"2020-04-05/06:10:00Z\"\r\n        },\r\n        desc: \"\",\r\n        tickets: \"https://motorsporttickets.com/en-gb/f1/vietnam/tickets\",\r\n        winners: [\"First race in 2020\"],\r\n        extended: false,\r\n    },\r\n    {\r\n        season: \"2020\",\r\n        round: \"4\",\r\n        url: \"https://en.wikipedia.org/wiki/2020_Chinese_Grand_Prix\",\r\n        raceName: \"Chinese Grand Prix\",\r\n        nameShort: \"Chinese GP (DELAYED)\",\r\n        Circuit: {\r\n            circuitId: \"shanghai\",\r\n            url: \"http://en.wikipedia.org/wiki/Shanghai_International_Circuit\",\r\n            circuitName: \"Shanghai International Circuit\",\r\n            Location: {\r\n                lat: \"31.3389\",\r\n                long: \"121.22\",\r\n                locality: \"Shanghai\",\r\n                country: \"China\"\r\n            }\r\n        },\r\n        sessions: {\r\n            p1: \"2020-04-17/02:00:00Z\",\r\n            p2: \"2020-04-17/06:00:00Z\",\r\n            p3: \"2020-04-18/03:00:00Z\",\r\n            qualy: \"2020-04-18/06:00:00Z\",\r\n            race: \"2020-04-19/05:10:00Z\"\r\n        },\r\n        desc: \"\",\r\n        tickets: \"https://motorsporttickets.com/en-gb/f1/china/tickets\",\r\n        winners: [\"2019: Hamilton\", \"2018: Ricciardo\", \"2017: Hamilton\"],\r\n        extended: false,\r\n    },\r\n    {\r\n        season: \"2020\",\r\n        round: \"5\",\r\n        url: \"https://en.wikipedia.org/wiki/2020_Dutch_Grand_Prix\",\r\n        raceName: \"Dutch Grand Prix\",\r\n        nameShort: \"Dutch GP\",\r\n        Circuit: {\r\n            circuitId: \"zandvoort\",\r\n            url: \"http://en.wikipedia.org/wiki/Circuit_Zandvoort\",\r\n            circuitName: \"Circuit Park Zandvoort\",\r\n            Location: {\r\n                lat: \"52.3888\",\r\n                long: \"4.54092\",\r\n                locality: \"Zandvoort\",\r\n                country: \"Netherlands\"\r\n            }\r\n        },\r\n        sessions: {\r\n            p1: \"2020-05-01/09:00:00Z\",\r\n            p2: \"2020-05-01/13:00:00Z\",\r\n            p3: \"2020-05-02/10:00:00Z\",\r\n            qualy: \"2020-05-02/13:00:00Z\",\r\n            race: \"2020-05-03/13:10:00Z\"\r\n        },\r\n        desc: \"\",\r\n        tickets: \"https://motorsporttickets.com/en-gb/f1/netherlands/tickets\",\r\n        winners: [\"Returning race\"],\r\n        extended: false,\r\n    },\r\n    {\r\n        season: \"2020\",\r\n        round: \"6\",\r\n        url: \"https://en.wikipedia.org/wiki/2020_Spanish_Grand_Prix\",\r\n        raceName: \"Spanish Grand Prix\",\r\n        nameShort: \"Spanish GP\",\r\n        Circuit: {\r\n            circuitId: \"catalunya\",\r\n            url: \"http://en.wikipedia.org/wiki/Circuit_de_Barcelona-Catalunya\",\r\n            circuitName: \"Circuit de Barcelona-Catalunya\",\r\n            Location: {\r\n                lat: \"41.57\",\r\n                long: \"2.26111\",\r\n                locality: \"Montmeló\",\r\n                country: \"Spain\"\r\n            },\r\n            desc: \"\",\r\n            tickets: \"\",\r\n            winners: []\r\n        },\r\n        sessions: {\r\n            p1: \"2020-05-08/09:00:00Z\",\r\n            p2: \"2020-05-08/13:00:00Z\",\r\n            p3: \"2020-05-09/10:00:00Z\",\r\n            qualy: \"2020-05-09/13:00:00Z\",\r\n            race: \"2020-05-10/13:10:00Z\"\r\n        },\r\n        desc: \"The first Spanish Grand Prix in 1913 was not actually run to the Grand Prix formula of the day, but to touring car rules, taking place on a 300-kilometre road circuit at Guadarrama, near Madrid, on the road to Valladolid. Motor racing events had taken place in Spain prior to that—the most notable among them being the Catalan Cup of 1908 and 1909, on roads around Sitges, near Barcelona. Both of these events were won by Jules Goux, helping to establish a strong racing tradition in Spain, which has continued to this day. This enthusiasm for racing led to the plan to build a permanent track at Sitges—a 2-kilometre (1.2 mi) oval that became known as Sitges-Terramar, and was the site of the 1923 Spanish Grand Prix. \",\r\n        tickets: \"https://motorsporttickets.com/en-gb/f1/spain/tickets\",\r\n        winners: [\"2019: Hamilton\", \"2018: Hamilton\", \"2017: Hamilton\"],\r\n        extended: false,\r\n    },\r\n    {\r\n        season: \"2020\",\r\n        round: \"7\",\r\n        url: \"https://en.wikipedia.org/wiki/2020_Monaco_Grand_Prix\",\r\n        raceName: \"Monaco Grand Prix\",\r\n        nameShort: \"Monaco GP\",\r\n        Circuit: {\r\n            circuitId: \"monaco\",\r\n            url: \"http://en.wikipedia.org/wiki/Circuit_de_Monaco\",\r\n            circuitName: \"Circuit de Monaco\",\r\n            Location: {\r\n                lat: \"43.7347\",\r\n                long: \"7.42056\",\r\n                locality: \"Monte-Carlo\",\r\n                country: \"Monaco\"\r\n            }\r\n        },\r\n        sessions: {\r\n            p1: \"2020-05-21/09:00:00Z\",\r\n            p2: \"2020-05-21/13:00:00Z\",\r\n            p3: \"2020-05-23/10:00:00Z\",\r\n            qualy: \"2020-05-23/13:00:00Z\",\r\n            race: \"2020-05-24/13:10:00Z\"\r\n        },\r\n        desc: \"Like many European races, the Monaco Grand Prix predates the current World Championship. The principality's first Grand Prix was organised in 1929 by Antony Noghès, under the auspices of Prince Louis II, through the Automobile Club de Monaco (ACM), of which he was president.[9] The ACM organised the Rallye Automobile Monte Carlo, and in 1928 applied to the Association Internationale des Automobiles Clubs Reconnus (AIACR), the international governing body of motorsport, to be upgraded from a regional French club to full national status. Their application was refused due to the lack of a major motorsport event held wholly within Monaco's boundaries. The rally could not be considered as it mostly used the roads of other European countries.[10]\",\r\n        tickets: \"https://motorsporttickets.com/en-gb/f1/monaco/tickets\",\r\n        winners: [\"2019: Hamilton\", \"2018: Ricciardo\", \"2017: Vettel\"],\r\n        extended: false,\r\n    },\r\n    {\r\n        season: \"2020\",\r\n        round: \"8\",\r\n        url: \"https://en.wikipedia.org/wiki/2020_Azerbaijan_Grand_Prix\",\r\n        raceName: \"Azerbaijan Grand Prix\",\r\n        nameShort: \"Azerbaijan GP\",\r\n        Circuit: {\r\n            circuitId: \"BAK\",\r\n            url: \"http://en.wikipedia.org/wiki/Baku_City_Circuit\",\r\n            circuitName: \"Baku City Circuit\",\r\n            Location: {\r\n                lat: \"40.3725\",\r\n                long: \"49.8533\",\r\n                locality: \"Baku\",\r\n                country: \"Azerbaijan\"\r\n            }\r\n        },\r\n        sessions: {\r\n            p1: \"2020-06-05/09:00:00Z\",\r\n            p2: \"2020-06-05/13:00:00Z\",\r\n            p3: \"2020-06-06/10:00:00Z\",\r\n            qualy: \"2020-06-06/13:00:00Z\",\r\n            race: \"2020-06-07/12:10:00Z\"\r\n        },\r\n        desc: \"\",\r\n        tickets: \"https://motorsporttickets.com/en-gb/f1/azerbaijan/tickets\",\r\n        winners: [\"2019: Bottas\", \"2018: Hamilton\", \"2017: Ricciardo\"],\r\n        extended: false,\r\n    },\r\n    {\r\n        season: \"2020\",\r\n        round: \"9\",\r\n        url: \"https://en.wikipedia.org/wiki/2020_Canadian_Grand_Prix\",\r\n        raceName: \"Canadian Grand Prix\",\r\n        nameShort: \"Canadian GP\",\r\n        Circuit: {\r\n            circuitId: \"villeneuve\",\r\n            url: \"http://en.wikipedia.org/wiki/Circuit_Gilles_Villeneuve\",\r\n            circuitName: \"Circuit Gilles Villeneuve\",\r\n            Location: {\r\n                lat: \"45.5\",\r\n                long: \"-73.5228\",\r\n                locality: \"Montreal\",\r\n                country: \"Canada\"\r\n            }\r\n        },\r\n        sessions: {\r\n            p1: \"2020-06-12/15:00:00Z\",\r\n            p2: \"2020-06-12/19:00:00Z\",\r\n            p3: \"2020-06-13/15:00:00Z\",\r\n            qualy: \"2020-06-13/18:00:00Z\",\r\n            race: \"2020-06-14/18:10:00Z\"\r\n        },\r\n        desc: \"The early Canadian Grand Prix was one of the premier events of the new Canadian Sports Car Championship, a series which had been created alongside the Canadian Grand Prix at Mosport Park near Toronto in 1961. Mosport Park (which is still in its original layout configuration) was a spectacular and challenging circuit that had lots of ups and downs; the circuit was popular with drivers. Several international sports car as well as Formula One drivers participated in the event. For the first five years, the event would be won by drivers with either prior Formula One experience, or would enter the championship after winning the Canadian Grand Prix. In 1966 the Canadian-American Challenge Cup ran the event, with American Mark Donohue winning.[1] Formula One took over the following year, although the CSCC and Can-Am series continued to compete at Mosport in their own events. \",\r\n        tickets: \"https://motorsporttickets.com/en-gb/f1/canada/tickets\",\r\n        winners: [\"2019: Bottas\", \"2018: Vettel\", \"2017: Hamilton\"],\r\n        extended: false,\r\n    },\r\n    {\r\n        season: \"2020\",\r\n        round: \"10\",\r\n        url: \"https://en.wikipedia.org/wiki/2020_French_Grand_Prix\",\r\n        raceName: \"French Grand Prix\",\r\n        nameShort: \"French GP\",\r\n        Circuit: {\r\n            circuitId: \"ricard\",\r\n            url: \"http://en.wikipedia.org/wiki/Paul_Ricard_Circuit\",\r\n            circuitName: \"Circuit Paul Ricard\",\r\n            Location: {\r\n                lat: \"43.2506\",\r\n                long: \"5.79167\",\r\n                locality: \"Le Castellet\",\r\n                country: \"France\"\r\n            }\r\n        },\r\n        sessions: {\r\n            p1: \"2020-06-26/09:00:00Z\",\r\n            p2: \"2020-06-26/13:00:00Z\",\r\n            p3: \"2020-06-27/10:00:00Z\",\r\n            qualy: \"2020-06-28/13:00:00Z\",\r\n            race: \"2020-06-28/13:10:00Z\"\r\n        },\r\n        desc: \"\",\r\n        tickets: \"https://motorsporttickets.com/en-gb/f1/france/tickets\",\r\n        winners: [\"2019: Bottas\", \"2018: Hamilton\"],\r\n        extended: false,\r\n    },\r\n    {\r\n        season: \"2020\",\r\n        round: \"11\",\r\n        url: \"https://en.wikipedia.org/wiki/2020_Austrian_Grand_Prix\",\r\n        raceName: \"Austrian Grand Prix\",\r\n        nameShort: \"Austrian GP\",\r\n        Circuit: {\r\n            circuitId: \"red_bull_ring\",\r\n            url: \"http://en.wikipedia.org/wiki/Red_Bull_Ring\",\r\n            circuitName: \"Red Bull Ring\",\r\n            Location: {\r\n                lat: \"47.2197\",\r\n                long: \"14.7647\",\r\n                locality: \"Spielburg\",\r\n                country: \"Austria\"\r\n            }\r\n        },\r\n        sessions: {\r\n            p1: \"2020-07-03/09:00:00Z\",\r\n            p2: \"2020-07-03/13:00:00Z\",\r\n            p3: \"2020-07-04/10:00:00Z\",\r\n            qualy: \"2020-07-04/13:00:00Z\",\r\n            race: \"2020-07-05/13:10:00Z\"\r\n        },\r\n        desc: \"In July 2013, it was reported that the circuit's new owners Red Bull GmbH had reached an agreement with Bernie Ecclestone to revive the Austrian Grand Prix after a ten-year absence from the calendar. The race was given a provisional date of July 2014. And on 6 December, the officially released calendar included the Austrian Grand Prix on it.\",\r\n        tickets: \"https://motorsporttickets.com/en-gb/f1/austria/tickets\",\r\n        winners: [\"2019: Verstappen\", \"2018: Verstappen\", \"2017: Bottas\"],\r\n        extended: false,\r\n    },\r\n    {\r\n        season: \"2020\",\r\n        round: \"12\",\r\n        url: \"https://en.wikipedia.org/wiki/2020_British_Grand_Prix\",\r\n        raceName: \"British Grand Prix\",\r\n        nameShort: \"British GP\",\r\n        Circuit: {\r\n            circuitId: \"silverstone\",\r\n            url: \"http://en.wikipedia.org/wiki/Silverstone_Circuit\",\r\n            circuitName: \"Silverstone Circuit\",\r\n            Location: {\r\n                lat: \"52.0786\",\r\n                long: \"-1.01694\",\r\n                locality: \"Silverstone\",\r\n                country: \"UK\"\r\n            }\r\n        },\r\n        sessions: {\r\n            p1: \"2020-07-17/09:00:00Z\",\r\n            p2: \"2020-07-17/13:00:00Z\",\r\n            p3: \"2020-07-18/10:00:00Z\",\r\n            qualy: \"2020-07-18/13:00:00Z\",\r\n            race: \"2020-07-19/13:10:00Z\"\r\n        },\r\n        desc: \"\",\r\n        tickets: \"https://motorsporttickets.com/en-gb/f1/britain/tickets\",\r\n        winners: [\"2019: Hamilton\", \"2018: Vettel\", \"2017: Hamilton\"],\r\n        extended: false,\r\n    },\r\n    {\r\n        season: \"2020\",\r\n        round: \"13\",\r\n        url: \"https://en.wikipedia.org/wiki/2020_Hungarian_Grand_Prix\",\r\n        raceName: \"Hungarian Grand Prix\",\r\n        nameShort: \"Hungarian GP\",\r\n        Circuit: {\r\n            circuitId: \"hungaroring\",\r\n            url: \"http://en.wikipedia.org/wiki/Hungaroring\",\r\n            circuitName: \"Hungaroring\",\r\n            Location: {\r\n                lat: \"47.5789\",\r\n                long: \"19.2486\",\r\n                locality: \"Budapest\",\r\n                country: \"Hungary\"\r\n            }\r\n        },\r\n        sessions: {\r\n            p1: \"2020-07-31/09:00:00Z\",\r\n            p2: \"2020-07-31/13:00:00Z\",\r\n            p3: \"2020-08-01/10:00:00Z\",\r\n            qualy: \"2020-08-01/13:00:00Z\",\r\n            race: \"2020-08-02/13:10:00Z\"\r\n        },\r\n        desc: \"The first Hungarian Grand Prix was held on 21 June 1936 over a 3.1-mile (5.0 km) track laid out in Népliget,[1] a park in Budapest. The Mercedes-Benz, Auto Union, and the Alfa Romeo-equipped Ferrari teams all sent three cars and the event drew a very large crowd. However, politics and the ensuing war meant the end of Grand Prix motor racing in the country for fifty years. \",\r\n        tickets: \"https://motorsporttickets.com/en-gb/f1/hungary/tickets\",\r\n        winners: [\"2019: Hamilton\", \"2018: Hamilton\", \"2017: Vettel\"],\r\n        extended: false,\r\n    },\r\n    {\r\n        season: \"2020\",\r\n        round: \"14\",\r\n        url: \"https://en.wikipedia.org/wiki/2020_Belgian_Grand_Prix\",\r\n        raceName: \"Belgian Grand Prix\",\r\n        nameShort: \"Belgian GP\",\r\n        Circuit: {\r\n            circuitId: \"spa\",\r\n            url: \"http://en.wikipedia.org/wiki/Circuit_de_Spa-Francorchamps\",\r\n            circuitName: \"Circuit de Spa-Francorchamps\",\r\n            Location: {\r\n                lat: \"50.4372\",\r\n                long: \"5.97139\",\r\n                locality: \"Spa\",\r\n                country: \"Belgium\"\r\n            }\r\n        },\r\n        sessions: {\r\n            p1: \"2020-08-28/09:00:00Z\",\r\n            p2: \"2020-08-29/13:00:00Z\",\r\n            p3: \"2020-08-29/10:00:00Z\",\r\n            qualy: \"2020-08-29/13:00:00Z\",\r\n            race: \"2020-08-30/13:10:00Z\"\r\n        },\r\n        desc: \"\",\r\n        tickets: \"https://motorsporttickets.com/en-gb/f1/belgium/tickets\",\r\n        winners: [\"2019: Leclerc\", \"2018: Vettel\", \"2017: Hamilton\"],\r\n        extended: false,\r\n    },\r\n    {\r\n        season: \"2020\",\r\n        round: \"15\",\r\n        url: \"https://en.wikipedia.org/wiki/2020_Italian_Grand_Prix\",\r\n        raceName: \"Italian Grand Prix\",\r\n        nameShort: \"Italian GP\",\r\n        Circuit: {\r\n            circuitId: \"monza\",\r\n            url: \"http://en.wikipedia.org/wiki/Autodromo_Nazionale_Monza\",\r\n            circuitName: \"Autodromo Nazionale di Monza\",\r\n            Location: {\r\n                lat: \"45.6156\",\r\n                long: \"9.28111\",\r\n                locality: \"Monza\",\r\n                country: \"Italy\"\r\n            }\r\n        },\r\n        sessions: {\r\n            p1: \"2020-09-04/09:00:00Z\",\r\n            p2: \"2020-09-04/13:00:00Z\",\r\n            p3: \"2020-09-05/10:00:00Z\",\r\n            qualy: \"2020-09-05/13:00:00Z\",\r\n            race: \"2020-09-06/13:10:00Z\"\r\n        },\r\n        desc: \"Motor racing has always been extremely popular in Italy, the first Italian Grand Prix motor racing championship took place on 4 September 1921 at a 10.7-mile (17.3 km) circuit near Montichiari, which had been the site of the Gordon Bennett races in the early 1900s. However, the race is more closely associated with the course at Monza, a racing facility just outside the northern city of Milan, which was built in 1922 in time for that year's race, and has been the location for most of the races over the years. \",\r\n        tickets: \"https://motorsporttickets.com/en-gb/f1/italy/tickets\",\r\n        winners: [\"2019: Leclerc\", \"2018: Hamilton\", \"2017: Hamilton\"],\r\n        extended: false,\r\n    },\r\n    {\r\n        season: \"2020\",\r\n        round: \"16\",\r\n        url: \"https://en.wikipedia.org/wiki/2020_Singapore_Grand_Prix\",\r\n        raceName: \"Singapore Grand Prix\",\r\n        nameShort: \"Singapore GP\",\r\n        Circuit: {\r\n            circuitId: \"marina_bay\",\r\n            url: \"http://en.wikipedia.org/wiki/Marina_Bay_Street_Circuit\",\r\n            circuitName: \"Marina Bay Street Circuit\",\r\n            Location: {\r\n                lat: \"1.2914\",\r\n                long: \"103.864\",\r\n                locality: \"Marina Bay\",\r\n                country: \"Singapore\"\r\n            }\r\n        },\r\n        sessions: {\r\n            p1: \"2020-09-18/08:30:00Z\",\r\n            p2: \"2020-09-18/12:30:00Z\",\r\n            p3: \"2020-09-19/10:00:00Z\",\r\n            qualy: \"2020-09-19/13:00:00Z\",\r\n            race: \"2020-09-20/12:10:00Z\"\r\n        },\r\n        desc: \"Announced in 2008, an agreement for a five-year deal was signed by Singapore GP Pte Ltd, the Singapore Tourism Board and Bernie Ecclestone. In November 2007 it was announced that the telecommunications company Singtel would sponsor the event, and also they televised the show on Channel 5 called SingTel Grid Girls. The official name of the event became the Formula 1 SingTel Singapore Grand Prix.[3] The race was co-funded by the Government of Singapore, footing 60% of the total bill, or S$90 million, out of a total tab of S$150 million. Around 110,000 tickets were made available for the country's first Formula One race. Corporate hospitality suites and packages went on sale at the end November 2007, three-day passes to the public went on sale in February 2008. Single-day passes went on sale a month later.[15] The event went on to achieve a full sell-out for all of its tickets.[16] The 2008 race hosted the famous Amber Lounge after party and in 2010 Singapore became the second location to host the Amber Lounge Fashion show. \",\r\n        tickets: \"https://motorsporttickets.com/en-gb/f1/singapore/tickets\",\r\n        winners: [\"2019: Vettel\", \"2018: Hamilton\", \"2017: Hamilton\"],\r\n        extended: false,\r\n    },\r\n    {\r\n        season: \"2020\",\r\n        round: \"17\",\r\n        url: \"https://en.wikipedia.org/wiki/2020_Russian_Grand_Prix\",\r\n        raceName: \"Russian Grand Prix\",\r\n        nameShort: \"Russian GP\",\r\n        Circuit: {\r\n            circuitId: \"sochi\",\r\n            url: \"http://en.wikipedia.org/wiki/Sochi_Autodrom\",\r\n            circuitName: \"Sochi Autodrom\",\r\n            Location: {\r\n                lat: \"43.4057\",\r\n                long: \"39.9578\",\r\n                locality: \"Sochi\",\r\n                country: \"Russia\"\r\n            }\r\n        },\r\n        sessions: {\r\n            p1: \"2020-09-25/08:00:00Z\",\r\n            p2: \"2020-09-25/12:00:00Z\",\r\n            p3: \"2020-09-26/09:00:00Z\",\r\n            qualy: \"2020-09-26/12:00:00Z\",\r\n            race: \"2020-09-27/11:10:00Z\"\r\n        },\r\n        desc: \"\",\r\n        tickets: \"https://motorsporttickets.com/en-gb/f1/russia/tickets\",\r\n        winners: [\"2019: Hamilton\", \"2018: Hamilton\", \"2017: Bottas\"],\r\n        extended: false,\r\n    },\r\n    {\r\n        season: \"2020\",\r\n        round: \"18\",\r\n        url: \"https://en.wikipedia.org/wiki/2020_Japanese_Grand_Prix\",\r\n        raceName: \"Japanese Grand Prix\",\r\n        nameShort: \"Japanese GP\",\r\n        Circuit: {\r\n            circuitId: \"suzuka\",\r\n            url: \"http://en.wikipedia.org/wiki/Suzuka_Circuit\",\r\n            circuitName: \"Suzuka Circuit\",\r\n            Location: {\r\n                lat: \"34.8431\",\r\n                long: \"136.541\",\r\n                locality: \"Suzuka\",\r\n                country: \"Japan\"\r\n            }\r\n        },\r\n        sessions: {\r\n            p1: \"2020-10-09/02:00:00Z\",\r\n            p2: \"2020-10-09/06:00:00Z\",\r\n            p3: \"2020-10-10/03:00:00Z\",\r\n            qualy: \"2020-10-10/06:00:00Z\",\r\n            race: \"2020-10-11/04:10:00Z\"\r\n        },\r\n        desc: \"The first Japanese Grand Prix was run as a sports car race at the Suzuka Circuit 80 kilometres (50 mi) south west of Nagoya in May 1963. In 1964, the race was held at Suzuka again. This marked the beginning of motor racing in earnest in Japan. For the next eight installments, however, the non-championship Grand Prix was run at the Fuji Speedway, 40 miles (64 km) west of Yokohama and 66 miles (106 km) west of the Japanese capital of Tokyo. The circuit had a banked corner called Daiichi and was the scene of many fatal accidents. It was then run as a number of disciplines of motorsports, particularly Formula 2, sports cars and Can-Am-type sprint racing. \",\r\n        tickets: \"https://motorsporttickets.com/en-gb/f1/japan/tickets\",\r\n        winners: [\"2019: Bottas\", \"2018: Hamilton\", \"2017: Hamilton\"],\r\n        extended: false,\r\n    },\r\n    {\r\n        season: \"2020\",\r\n        round: \"19\",\r\n        url: \"https://en.wikipedia.org/wiki/2020_United_States_Grand_Prix\",\r\n        raceName: \"United States Grand Prix\",\r\n        nameShort: \"United States GP\",\r\n        Circuit: {\r\n            circuitId: \"americas\",\r\n            url: \"http://en.wikipedia.org/wiki/Circuit_of_the_Americas\",\r\n            circuitName: \"Circuit of the Americas\",\r\n            Location: {\r\n                lat: \"30.1328\",\r\n                long: \"-97.6411\",\r\n                locality: \"Austin\",\r\n                country: \"USA\"\r\n            }\r\n        },\r\n        sessions: {\r\n            p1: \"2020-10-23/17:00:00Z\",\r\n            p2: \"2020-10-23/21:00:00Z\",\r\n            p3: \"2020-10-24/19:00:00Z\",\r\n            qualy: \"2020-10-24/22:00:00Z\",\r\n            race: \"2020-10-25/19:10:00Z\"\r\n        },\r\n        desc: \"On May 25, 2010, Austin, Texas, was awarded the race on a ten-year contract, as Ecclestone and event promoter Full Throttle Productions agreed to a deal beginning in 2012. The event is being held on a purpose-built new track, which was named Circuit of the Americas. German architect and track designer Hermann Tilke designed the new track on 800 acres (320 ha) of land to the east of the city.[58] In July 2010, promoter Tavo Hellmund promised that the circuit would be one of the 'most challenging and spectacular in the world' and that it would include a selection of corner sequences inspired by 'the very best circuits' in the world.\",\r\n        tickets: \"https://motorsporttickets.com/en-gb/f1/united-states/tickets\",\r\n        winners: [\"2019: Bottas\", \"2018: Räikkönen\", \"2017: Hamilton\"],\r\n        extended: false,\r\n    },\r\n    {\r\n        season: \"2020\",\r\n        round: \"20\",\r\n        url: \"https://en.wikipedia.org/wiki/2020_Mexican_Grand_Prix\",\r\n        raceName: \"Mexico City Grand Prix\",\r\n        nameShort: \"Mexico City GP\",\r\n        Circuit: {\r\n            circuitId: \"rodriguez\",\r\n            url:\r\n                \"http://en.wikipedia.org/wiki/Aut%C3%B3dromo_Hermanos_Rodr%C3%ADguez\",\r\n            circuitName: \"Autódromo Hermanos Rodríguez\",\r\n            Location: {\r\n                lat: \"19.4042\",\r\n                long: \"-99.0907\",\r\n                locality: \"Mexico City\",\r\n                country: \"Mexico\"\r\n            }\r\n        },\r\n        sessions: {\r\n            p1: \"2020-10-30/17:00:00Z\",\r\n            p2: \"2020-10-30/21:00:00Z\",\r\n            p3: \"2020-10-31/16:00:00Z\",\r\n            qualy: \"2020-10-31/19:00:00Z\",\r\n            race: \"2020-11-01/19:10:00Z\"\r\n        },\r\n        desc: \"\",\r\n        tickets: \"https://motorsporttickets.com/en-gb/f1/mexico/tickets\",\r\n        winners: [\"2019: Hamilton\", \"2018: Vertsappen\", \"2017: Vertsappen\"],\r\n        extended: false,\r\n    },\r\n    {\r\n        season: \"2020\",\r\n        round: \"21\",\r\n        url: \"https://en.wikipedia.org/wiki/2020_Brazilian_Grand_Prix\",\r\n        raceName: \"Brazilian Grand Prix\",\r\n        nameShort: \"Brazilian GP\",\r\n        Circuit: {\r\n            circuitId: \"interlagos\",\r\n            url:\r\n                \"http://en.wikipedia.org/wiki/Aut%C3%B3dromo_Jos%C3%A9_Carlos_Pace\",\r\n            circuitName: \"Autódromo José Carlos Pace\",\r\n            Location: {\r\n                lat: \"-23.7036\",\r\n                long: \"-46.6997\",\r\n                locality: \"São Paulo\",\r\n                country: \"Brazil\"\r\n            }\r\n        },\r\n        sessions: {\r\n            p1: \"2020-11-13/14:00:00Z\",\r\n            p2: \"2020-11-13/18:00:00Z\",\r\n            p3: \"2020-11-14/15:00:00Z\",\r\n            qualy: \"2020-11-14/18:00:00Z\",\r\n            race: \"2020-11-15/17:10:00Z\"\r\n        },\r\n        desc: \"Motor racing started in Brazil before World War II, with races on the 6.9-mile Gávea street circuit in Rio de Janeiro starting in 1934. In 1936 construction began on Brazil's first permanent autodrome in the São Paulo neighborhood of Interlagos and was finished in 1940. Brazil held Grands Prix during the early parts of WWII at Interlagos and Gavea. Interlagos, a circuit inspired in layout by the Roosevelt Raceway in the United States quickly gained a reputation as being a tough and demanding circuit with many challenging corners, elevation changes, a rough surface, and little room for error. \",\r\n        tickets: \"https://motorsporttickets.com/en-gb/f1/brazil/tickets\",\r\n        winners: [\"2019: Verstappen\", \"2018: Hamilton\", \"2017: Vettel\"],\r\n        extended: false,\r\n    },\r\n    {\r\n        season: \"2020\",\r\n        round: \"22\",\r\n        url: \"https://en.wikipedia.org/wiki/2020_Abu_Dhabi_Grand_Prix\",\r\n        raceName: \"Abu Dhabi Grand Prix\",\r\n        nameShort: \"Abu Dhabi GP\",\r\n        Circuit: {\r\n            circuitId: \"yas_marina\",\r\n            url: \"http://en.wikipedia.org/wiki/Yas_Marina_Circuit\",\r\n            circuitName: \"Yas Marina Circuit\",\r\n            Location: {\r\n                lat: \"24.4672\",\r\n                long: \"54.6031\",\r\n                locality: \"Abu Dhabi\",\r\n                country: \"UAE\"\r\n            }\r\n        },\r\n        sessions: {\r\n            p1: \"2020-11-27/09:00:00Z\",\r\n            p2: \"2020-11-27/13:00:00Z\",\r\n            p3: \"2020-11-28/10:00:00Z\",\r\n            qualy: \"2020-11-28/13:00:00Z\",\r\n            race: \"2020-11-29/13:10:00Z\"\r\n        },\r\n        desc: \"Formula 1 first came to Abu Dhabi in 2007 in the guise of the first ever Formula One Festival. Announced in January 2007, the event which took place on 3 February 2007 was free, and the largest gathering of current Formula One cars and drivers outside of a Grand Prix. At the festival it was announced that Abu Dhabi had won the rights to host a Grand Prix from 2009 until 2016. Later that year, Etihad Airways negotiated a three-year deal for them to become sponsors of the Grand Prix.\",\r\n        tickets: \"https://motorsporttickets.com/en-gb/f1/abu-dhabi/tickets\",\r\n        winners: [\"2019: Hamilton\", \"2018: Hamilton\", \"2017: Bottas\"],\r\n        extended: false,\r\n    }\r\n];\r\n","import React, { Component } from \"react\";\r\n\r\nimport styling from \"./styling\";\r\nimport GpCard from \"../gpcard/GpCard\";\r\nimport SubHeader from \"../subheader/SubHeader\";\r\n\r\nimport { races } from \"../../data/gp\";\r\n\r\nimport { convertTime } from \"../../data/date\";\r\n\r\nimport { withStyles } from \"@material-ui/core/\";\r\n\r\nclass GpDisplay extends Component {\r\n    constructor(props) {\r\n        super();\r\n\r\n        this.cardClick = this.cardClick.bind(this);\r\n        this.state = {\r\n            data: convertTime(races, props.zone)\r\n        };\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.zone !== prevProps.zone) {\r\n            this.setState({\r\n                data: convertTime(races, this.props.zone)\r\n            });\r\n        }\r\n    }\r\n\r\n    // Extends/Retracts card when clicked\r\n    cardClick(n) {\r\n        let d = this.state.data;\r\n\r\n        d[n - 1].extended = !d[n - 1].extended;\r\n\r\n        this.setState({\r\n            data: d\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const c = this.props.classes;\r\n\r\n        return (\r\n            <main className={c.GpDisplay}>\r\n                <section className={c.GpDisplay__list}>\r\n                    <SubHeader headline=\"Grand Prix\" />\r\n\r\n                    {this.state.data.map((i, index) => (\r\n                        <GpCard\r\n                            key={index}\r\n                            data={i}\r\n                            cardClick={this.cardClick}\r\n                        />\r\n                    ))}\r\n                </section>\r\n            </main>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styling)(GpDisplay);\r\n","\r\n// import bg from \"../../styling/assets/binding_dark.png\";\r\nimport bg from \"../../styling/assets/ep_naturalblack.png\";\r\n\r\nconst homeJss = theme => ({\r\n    \r\n    root: {\r\n        \r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        minHeight: \"100vh\",\r\n\r\n        backgroundImage: `url(${bg})`,\r\n        \r\n\r\n    },\r\n    topDiv: {\r\n        background: 'rgba(20,30,30,0.7)',\r\n        height: \"250px\",\r\n        width: \"100vw\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        position: \"relative\",\r\n        top: \"0\",\r\n        bottom: \"0\",\r\n        right: \"0\",\r\n        left: \"0\",\r\n        //backgroundImage: \"linear-gradient(135deg,rgba(10,20,20,0.7), rgba(30,40,40,0.7))\",\r\n        clipPath: \"polygon(0 0,100% 0,100% 100%,0 50%)\",\r\n        borderRadius: \"0px 0px 0px 0px\",\r\n        // transform: 'skewY(-3deg)',\r\n        transformOrigin: 'top left',\r\n    },\r\n    topDiv2: {\r\n        background: 'rgba(10,20,20,0.7)',\r\n        height: \"250px\",\r\n        width: \"100vw\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        position: \"relative\",\r\n        top: \"-125px\",\r\n        bottom: \"0\",\r\n        right: \"0\",\r\n        left: \"0\",\r\n        //backgroundImage: \"rgba(10,20,20,0.7)\",\r\n        clipPath: \"polygon(0 0,100% 50%,100% 100%,0 100%)\",\r\n        \r\n        borderRadius: \"0px 0px 0px 0px\",\r\n        // transform: 'skewY(-3deg)',\r\n        transformOrigin: 'top left',\r\n    }\r\n    \r\n})\r\n\r\nexport default homeJss;","import React, { Component } from \"react\";\r\nimport moment from \"moment-timezone\";\r\n\r\n\r\nimport Header from \"../../components/header/Header.jsx\";\r\nimport Footer from \"../../components/footer/Footer.jsx\";\r\nimport ZoneSelector from \"../../components/zoneselector/ZoneSelector.jsx\";\r\nimport GpDisplay from \"../../components/gpdisplay/GpDisplay\"\r\n\r\nimport homeJss from \"./homeJss\";\r\n\r\nimport { \r\n    withStyles,\r\n } from \"@material-ui/core/\";\r\n\r\nimport { races } from \"../../data/gp\";\r\n\r\n \r\nclass Home extends Component {\r\n    \r\n    constructor(props) {\r\n        super();\r\n\r\n        this.updateTimezone = this.updateTimezone.bind(this);\r\n        this.state = ({\r\n            data: races,\r\n            timezone: localStorage.getItem(\"timezone\") ? localStorage.getItem(\"timezone\") : moment.tz.guess(true),\r\n        });\r\n    }\r\n\r\n    updateTimezone(e){\r\n       this.setState({\r\n           timezone: e\r\n       });\r\n\r\n       localStorage.setItem(\"timezone\", e)\r\n    }\r\n    \r\n    \r\n\r\n    render() {\r\n\r\n        const { classes } = this.props;\r\n        return (\r\n            <div>\r\n                <div className={classes.root}>\r\n                \r\n                    <Header headline={\"Formula 1 calendar 2020\"}/>\r\n                    \r\n                    <ZoneSelector onChange={this.updateTimezone} zone={this.state.timezone}/>\r\n                    \r\n                    <GpDisplay data={this.state.data} zone={this.state.timezone} />\r\n                    \r\n                    <Footer />\r\n                </div>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(homeJss)(Home);\r\n","import React from \"react\";\n\nimport { MuiThemeProvider, CssBaseline } from \"@material-ui/core\";\nimport darkTheme from \"./styling/darkTheme\";\n\n// import logo from \"./logo.svg\";\nimport \"./App.css\";\n\nimport Home from \"./views/home/Home.jsx\";\n\nfunction App() {\n    return (\n        <MuiThemeProvider theme={darkTheme}>\n            <CssBaseline />\n            <Home/>\n        </MuiThemeProvider>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}